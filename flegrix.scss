$flegrix-grid-gutter: 2.5% !default; // gutter between columns.
$flegrix-grid-cols: 12 !default; // column-count

@mixin container() {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

// parse(1)
// parse(1 of 4)
@function parse($shorthand) {

  $col: $shorthand;
  $context: $flegrix-grid-cols;

  @if (index($shorthand, 'of') == 2) {
    $context: nth($shorthand, 3);
    $col: nth($shorthand, 1);
  }

  @return $col $context;
}

// 3 * gutter() = gutter(3) = gutter(3 of 12)
@function gutter($shorthand: 1) {

  $parsed: parse($shorthand);
  $col: nth($parsed, 1);
  $context: nth($parsed, 2);

  @return $flegrix-grid-gutter * (1 * $flegrix-grid-cols / $context) * $col;
}


// get the width in %
// span(4) == span(4 of 12)
@function span($shorthand) {

  $parsed: parse($shorthand);
  $col: nth($parsed, 1);
  $context: nth($parsed, 2);

  $totalColumnWidth: 100% - (gutter($context - 1 of $context));
  $width: ($totalColumnWidth / $context * $col) + (gutter(($col - 1) of $context));
  @return $width;
}


@mixin col(
  $col,
  $fg: 1,
  $fs: 1
){
  flex-grow: $fg;
  flex-shrink: $fs;
  flex-basis: span($col);
  max-width: span($col);
}



@mixin container-background-grid($columns: 12) {
  @include background-grid($columns)
  background-size: 100% 100%;
  background-position: center 0;
  background-repeat: repeat-y;
}


@mixin background-grid-gradient($columns: 12) {
  $transparent: rgba(0,0,0,0);
  $color: rgba(255,0,0,0.07);
  $x: 0;
  $values: ($color 0);
  @for $i from 1 through $columns {
     @if $i != $columns{
      $x: $x + span(1 of $columns);
      $values: append($values, $color $x, comma);
      $values: append($values, $transparent $x, comma);
      $x: $x + gutter(1 of $columns);
      $values: append($values, $transparent $x, comma);
      $values: append($values, $color $x, comma);
    }
    @else {
      $x: $x + span(1 of $columns);
      $values: append($values, $color $x, comma);
      $values: append($values, $transparent $x, comma);
    }
  }
  background-image: linear-gradient(to right, #{$values});
}



@mixin background-grid($columns: 12) {

    $color: rgba(255,0,0,0.07);
    $x: 0;
    $width: span(1 of $columns);

    $svg: "data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$color}'%3E";
    @for $i from 1 through $columns {
        $svg: $svg + "%3Crect x='#{$x}' width='#{$width}' height='100%'/%3E";
        $x: $x + span(1 of $columns);
        $x: $x + gutter(1 of $columns);
    }

    $svg: $svg + "%3C/svg%3E";
    background-image: url($svg);
}
