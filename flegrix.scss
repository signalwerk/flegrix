$flegrix-grid-gutter: 3% !default; // gutter between columns.
$flegrix-grid-cols: 12 !default; // column-count

@mixin container() {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
}

// parse(1)
// parse(1 of 4)
@function parse($shorthand) {

  $col: $shorthand;
  $context: $flegrix-grid-cols;

  @if (index($shorthand, 'of') == 2) {
    $context: nth($shorthand, 3);
    $col: nth($shorthand, 1);
  }

  @return $col $context;
}

// 3 * gutter() = gutter(3) = gutter(3 of 12)
@function gutter($shorthand: 1) {

  $parsed: parse($shorthand);
  $col: nth($parsed, 1);
  $context: nth($parsed, 2);

  @return $flegrix-grid-gutter * (1 * $flegrix-grid-cols / $context) * $col;
}


// get the width in %
// span(4) == span(4 of 12)
@function span($shorthand) {

  $parsed: parse($shorthand);
  $col: nth($parsed, 1);
  $context: nth($parsed, 2);

  $totalColumnWidth: 100% - (gutter($context - 1 of $context));
  $width: ($totalColumnWidth / $context * $col) + (gutter(($col - 1) of $context));
  @return $width;
}


@mixin col(
  $col,
  $fg: 1,
  $fs: 1
){
  flex-grow: $fg;
  flex-shrink: $fs;
  flex-basis: span($col);
  max-width: span($col);
}

@mixin container-background-grid($columns: 12) {
  @include background-grid($columns);
  background-size: 100% 100%;
  background-position: center 0;
  background-repeat: repeat-y;
}

// https://gist.github.com/B-iggy/14da053d2cebf92e1930
// functions to urlencode the svg string
@function flegrix-str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + flegrix-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}

@function flegrix-url-encode($string) {
  $map: (
   "%": "%25",
   "<": "%3C",
   ">": "%3E",
   " ": "%20",
   "!": "%21",
   "*": "%2A",
   "'": "%27",
   '"': "%22",
   "(": "%28",
   ")": "%29",
   ";": "%3B",
   ":": "%3A",
   "@": "%40",
   "&": "%26",
   "=": "%3D",
   "+": "%2B",
   "$": "%24",
   ",": "%2C",
   "/": "%2F",
   "?": "%3F",
   "#": "%23",
   "[": "%5B",
   "]": "%5D"
   );
  $new: $string;
  @each $search, $replace in $map {
    $new: flegrix-str-replace($new, $search, $replace);
  }
  @return $new;
}


@mixin background-grid($columns: 12) {

  $color: rgba(255,0,0,0.07);
  $lineColor: rgba(128,0,0,0.05);

  $x: 0;
  $width: span(1 of $columns);
  $gutter: gutter(1 of $columns);

  $style: "<#{'style'}><![CDATA["; // fix to have it run in codepen.io
  $style: $style + "line {";
  $style: $style + "  stroke: #{$lineColor};";
  $style: $style + "  stroke-width: 1;";
  $style: $style + "}";
  $style: $style + "]]></style>";

  $svg: "";

  @for $i from 1 through $columns {
    $svg: $svg + "<rect x='#{$x}' width='#{$width}' height='100%'/>";
    $svg: $svg + "<line x1='#{$x + $width/2}' y1='0' x2='#{$x + $width/2}' y2='100%' />";
    @if ($i != $columns) {
      $x: $x + $width;
      $svg: $svg + '<line x1="#{$x + $gutter/2}" y1="0" x2="#{$x + $gutter/2}" y2="100%" />';
      $x: $x + $gutter;
    }
  }
  $svg: "<svg xmlns='http://www.w3.org/2000/svg' fill='#{$color}'>" + $style + $svg + "</svg>";
  background-image: url('data:image/svg+xml;charset=utf8,#{flegrix-url-encode($svg)}');
}
