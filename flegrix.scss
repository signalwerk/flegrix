$flegrix-grid-default: (
  columns: 12, // column-count → default: 12
  gutter: 3%, // gutter between columns → default: 3%
  debug: false, // debug-mode → default: false
  debug-container-column-background: true, // draw column in debug-mode → default: true
  debug-container-column-midline: false, // draw column-midline in debug-mode → default: false
  debug-container-gutter-midline: false, // draw gutter-midline in debug-mode → default: false
);

$flegrix-grid-settings: $flegrix-grid-default;

@if(variable-exists(flegrix-grid)) {
  $flegrix-grid-settings: map-merge($flegrix-grid-default, $flegrix-grid);
}


@mixin container($columncount) {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;

  @if(map-get($flegrix-grid-settings, debug)) {
    @include flegrix-background-grid($columncount);
    background-size: 100% 100%;
    background-position: center 0;
    background-repeat: repeat-y;
  }
}

// flegrix-parse(1)
// flegrix-parse(1 of 4)
@function flegrix-parse($shorthand) {

  $col: $shorthand;
  $context: map-get($flegrix-grid-settings, columns);

  @if (index($shorthand, "of") == 2) {
    $context: nth($shorthand, 3);
    $col: nth($shorthand, 1);
  }

  @return $col $context;
}

// gutter() = gutter(12)
@function gutter($context) {
  @return map-get($flegrix-grid-settings, gutter) * (1 * map-get($flegrix-grid-settings, columns) / $context);
}


// get the width in %
// span(4) == span(4 of 12)
@function span($shorthand) {

  $parsed: flegrix-parse($shorthand);
  $col: nth($parsed, 1);
  $context: nth($parsed, 2);

  $totalColumnWidth: 100% - (gutter($context) * ($context - 1));
  $width: ($totalColumnWidth / $context * $col) + (gutter($context) * ($col - 1));
  @return $width;
}


@mixin col(
  $col,
  $fg: 1,
  $fs: 1
){
  flex-grow: $fg;
  flex-shrink: $fs;
  flex-basis: span($col);
  max-width: span($col);
}


// https://gist.github.com/B-iggy/14da053d2cebf92e1930
// functions to urlencode the svg string
@function flegrix-str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + flegrix-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}

@function flegrix-url-encode($string) {
  $map: (
   "%": "%25",
   "<": "%3C",
   ">": "%3E",
   " ": "%20",
   "!": "%21",
   "*": "%2A",
   "'": "%27",
   '"': "%22",
   "(": "%28",
   ")": "%29",
   ";": "%3B",
   ":": "%3A",
   "@": "%40",
   "&": "%26",
   "=": "%3D",
   "+": "%2B",
   "$": "%24",
   ",": "%2C",
   "/": "%2F",
   "?": "%3F",
   "#": "%23",
   "[": "%5B",
   "]": "%5D"
   );
  $new: $string;
  @each $search, $replace in $map {
    $new: flegrix-str-replace($new, $search, $replace);
  }
  @return $new;
}

@mixin flegrix-background-grid($columns: 12) {
  $color: rgba(255,0,0,0.07);
  $lineColor: rgba(128,0,0,0.05);

  $width: span(1 of $columns);
  $gutter: gutter($columns);

  $style: "<#{'style'}><![CDATA["; // fix to have it run in codepen.io
  $style: $style + "line {";
  $style: $style + " stroke: #{$lineColor};";
  $style: $style + " stroke-width: 1;";
  $style: $style + "}";
  $style: $style + "rect {";
  $style: $style + " width: #{$width};";
  $style: $style + " height: 100%;";
  $style: $style + "}";
  $style: $style + "]]></style>";
  $x: 0;
  $svg: "";
  @for $i from 1 through $columns {
    // draw column
    @if(map-get($flegrix-grid-settings, debug-container-column-background)){
      $svg: $svg + "<rect x='#{$x}' />";
    }
    // draw midline of column
    @if(map-get($flegrix-grid-settings, debug-container-column-midline)) {
      $svg: $svg + "<line x1='#{$x + $width/2}' y1='0' x2='#{$x + $width/2}' y2='100%' />";
    }
    // draw midline of gutter if not last column
    @if ($i != $columns) {
      $x: $x + $width;
      @if(map-get($flegrix-grid-settings, debug-container-gutter-midline)) {
        $svg: $svg + "<line x1='#{$x + $gutter/2}' y1='0' x2='#{$x + $gutter/2}' y2='100%' />";
      }
      $x: $x + $gutter;
    }
  }
  $svg: "<svg xmlns='http://www.w3.org/2000/svg' fill='#{$color}'>" + $style + $svg + "</svg>";
  background-image: url("data:image/svg+xml;charset=utf8,#{flegrix-url-encode($svg)}");
}
